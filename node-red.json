[
    {
        "id": "bb03f74f337e6740",
        "type": "tab",
        "label": "Flux 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "mqtt_in_temperature",
        "type": "mqtt in",
        "z": "bb03f74f337e6740",
        "name": "Temperature",
        "topic": "esp32/dht22/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 950,
        "y": 300,
        "wires": [
            [
                "gauge_temperature",
                "f3720a2b889654bd"
            ]
        ]
    },
    {
        "id": "mqtt_in_humidity",
        "type": "mqtt in",
        "z": "bb03f74f337e6740",
        "name": "Humidity",
        "topic": "esp32/dht22/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 940,
        "y": 400,
        "wires": [
            [
                "gauge_humidity"
            ]
        ]
    },
    {
        "id": "mqtt_in_name",
        "type": "mqtt in",
        "z": "bb03f74f337e6740",
        "name": "Medicament Name",
        "topic": "esp32/rfid/name",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 950,
        "y": 500,
        "wires": [
            [
                "text_name"
            ]
        ]
    },
    {
        "id": "gauge_temperature",
        "type": "ui_gauge",
        "z": "bb03f74f337e6740",
        "name": "Temperature",
        "group": "dashboard_group",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature (°C)",
        "label": "°C",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 300,
        "wires": []
    },
    {
        "id": "gauge_humidity",
        "type": "ui_gauge",
        "z": "bb03f74f337e6740",
        "name": "Humidity",
        "group": "dashboard_group",
        "order": 2,
        "width": "0",
        "height": "0",
        "gtype": "wave",
        "title": "Humidité % ",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "text_name",
        "type": "ui_text",
        "z": "bb03f74f337e6740",
        "group": "81368a0d99fe87fe",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Medicament Name",
        "label": "Stock de medicaments :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1150,
        "y": 500,
        "wires": []
    },
    {
        "id": "f3720a2b889654bd",
        "type": "function",
        "z": "bb03f74f337e6740",
        "name": "Process Temperature & Alert",
        "func": "// Convert incoming temperature to float\nlet temperature = parseFloat(msg.payload);\n\n// Publish temperature to node-red/temp\nlet tempMsg = { topic: \"node-red/temp\", payload: temperature };\n\n// Publish alert if temperature >= 25.5\nlet alertMsg = { topic: \"node-red/alert\", payload: temperature >= 25.5 ? \"true\" : \"false\" };\n\n// Return both messages\nreturn [tempMsg, alertMsg];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "4c96df6f27a2ede6"
            ],
            [
                "be203ef372d15702"
            ]
        ]
    },
    {
        "id": "4c96df6f27a2ede6",
        "type": "mqtt out",
        "z": "bb03f74f337e6740",
        "name": "Publish Temperature",
        "topic": "node-red/temp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 1400,
        "y": 180,
        "wires": []
    },
    {
        "id": "be203ef372d15702",
        "type": "mqtt out",
        "z": "bb03f74f337e6740",
        "name": "Publish Alert Temp",
        "topic": "node-red/alert",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 1390,
        "y": 300,
        "wires": []
    },
    {
        "id": "c918dfc5be568453",
        "type": "ui_switch",
        "z": "bb03f74f337e6740",
        "name": "Ajouter Medicament",
        "label": "Ajouter",
        "tooltip": "",
        "group": "81368a0d99fe87fe",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "topic": "medicament/add",
        "topicType": "str",
        "onvalue": "",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 860,
        "y": 620,
        "wires": [
            [
                "68585cfd4a8b7b7e"
            ]
        ],
        "icon": "fa-plus"
    },
    {
        "id": "d7f2fde72c8f1a38",
        "type": "ui_switch",
        "z": "bb03f74f337e6740",
        "name": "Retirer Medicament",
        "label": "Retirer",
        "tooltip": "",
        "group": "81368a0d99fe87fe",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "topic": "medicament/remove",
        "x": 860,
        "y": 680,
        "wires": [
            [
                "276a816a7416c1f5"
            ]
        ],
        "icon": "fa-minus"
    },
    {
        "id": "68585cfd4a8b7b7e",
        "type": "function",
        "z": "bb03f74f337e6740",
        "name": "Set Action to Increase",
        "func": "flow.set(\"switchAction\", \"increase\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "276a816a7416c1f5",
        "type": "function",
        "z": "bb03f74f337e6740",
        "name": "Set Action to Decrease",
        "func": "flow.set(\"switchAction\", \"decrease\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3271b739362e8f0e",
        "type": "mqtt in",
        "z": "bb03f74f337e6740",
        "name": "RFID Name Listener",
        "topic": "esp32/rfid/name",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1190,
        "y": 780,
        "wires": [
            [
                "98b43c048785b122"
            ]
        ]
    },
    {
        "id": "98b43c048785b122",
        "type": "function",
        "z": "bb03f74f337e6740",
        "name": "Update Stock Based on RFID",
        "func": "// Get the RFID name and the current action (increase or decrease)\nconst medicament = msg.payload;\nconst action = flow.get(\"switchAction\") || \"increase\";\n\n// Initialize stock if not already set\nlet stock = flow.get(\"stock\") || {\n    Augmentin: 0,\n    Lasilix: 0,\n    Dafalgan: 0,\n    Doliprane: 0\n};\n\nif (action === \"increase\") {\n    stock[medicament] = (stock[medicament] || 0) + 1;  // Increase stock\n} else if (action === \"decrease\" && stock[medicament] > 0) {\n    stock[medicament] = (stock[medicament] || 0) - 1;  // Decrease stock\n}\n\n// Save updated stock to flow context\nflow.set(\"stock\", stock);\n\n// Return updated stock as the payload\nmsg.payload = stock;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 720,
        "wires": [
            [
                "3b08e6180693236d"
            ]
        ]
    },
    {
        "id": "3b08e6180693236d",
        "type": "ui_template",
        "z": "bb03f74f337e6740",
        "group": "81368a0d99fe87fe",
        "name": "Tableau de Stock",
        "order": 5,
        "width": 6,
        "height": 4,
        "format": "<table border=\"1\" style=\"width:100%; text-align:center\">\n    <tr>\n        <th>Medicament</th>\n        <th>Stock</th>\n    </tr>\n    <tr ng-repeat=\"(medicament, count) in getFilteredStock(msg.payload)\">\n        <td>{{medicament}}</td>\n        <td>{{count}}</td>\n    </tr>\n</table>\n\n<script>\n    (function(scope) {\n        scope.getFilteredStock = function(stock) {\n            let entries = Object.entries(stock);\n            if (entries.length > 2) { \n                entries.pop(); // Supprime la dernière entrée\n                entries.pop(); // Supprime l'avant-dernière entrée\n            }\n            return Object.fromEntries(entries);\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1660,
        "y": 620,
        "wires": [
            [
                "check_stock_status"
            ]
        ]
    },
    {
        "id": "check_stock_status",
        "type": "function",
        "z": "bb03f74f337e6740",
        "name": "Check Stock & Publish",
        "func": "let stock = msg.payload;\nlet isEmpty = Object.values(stock).some(value => value === 0);\nmsg.payload = isEmpty;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1860,
        "y": 400,
        "wires": [
            [
                "mqtt_out_stock"
            ]
        ]
    },
    {
        "id": "mqtt_out_stock",
        "type": "mqtt out",
        "z": "bb03f74f337e6740",
        "name": "Publish Stock Status",
        "topic": "node-red/stock",
        "qos": "2",
        "retain": "true",
        "broker": "mqtt_broker",
        "x": 2180,
        "y": 400,
        "wires": []
    },
    {
        "id": "f87b4717ec14ec87",
        "type": "ui_spacer",
        "z": "bb03f74f337e6740",
        "name": "spacer",
        "group": "81368a0d99fe87fe",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "192.168.3.9",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Données DHT22",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "81368a0d99fe87fe",
        "type": "ui_group",
        "name": "Données RFID",
        "tab": "dashboard_tab",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "IoT Data",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]